permissions:
  id-token: write # This is required for requesting the JWT

on: 
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**' # this will allow ignore changes in workflow files

  release:
    types:
      - published

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  FOLDER_ID: b1gr0igqr38nt8rm70li
  SA_ID: ajepvcf5o5fl77h8b2cf
  FUNCTION_NAME: form-networking
  FUNCTION_RUNTIME: nodejs22
  FUNCTION_ENTRYPOINT: index.handler
  FUNCTION_MEMORY: 128Mb
  FUNCTION_SOURCEROOT: server/
  YC_API_GATEWAY_NAME: ${{ vars.YC_API_GATEWAY_NAME || 'form-networking-gw' }}
  STATIC_BUCKET: ${{ vars.YC_STATIC_BUCKET || '' }}
  FUNCTION_INVOKER_SA_ID: ${{ vars.YC_FUNCTION_INVOKER_SA_ID || '' }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Deploy Function
        id: sls-func
        uses: yc-actions/yc-sls-function@v3.1.0
        with:
          yc-sa-id: ${{env.SA_ID}}
          folder-id: ${{env.FOLDER_ID}}
          function-name: ${{env.FUNCTION_NAME}}
          runtime: ${{env.FUNCTION_RUNTIME}}
          memory: ${{env.FUNCTION_MEMORY}}
          entrypoint: ${{env.FUNCTION_ENTRYPOINT}}
          source-root: ${{env.FUNCTION_SOURCEROOT}}
          include: |
            **/*.json
            **/*.js
            **/*.html
            **/*.css
      - name: Render API Gateway specification
        env:
          FUNCTION_ID: ${{ steps.sls-func.outputs.function-id }}
          FUNCTION_INVOKER_SA_ID: ${{ env.FUNCTION_INVOKER_SA_ID }}
        run: |
          set -euo pipefail
          extra=()
          if [[ -n "${FUNCTION_INVOKER_SA_ID}" ]]; then
            extra+=(--service-account-id "${FUNCTION_INVOKER_SA_ID}")
          fi
          node infra/render-apigw.mjs infra/apigw-openapi.yaml apigw-openapi.resolved.yaml --function-id "${FUNCTION_ID}" "${extra[@]}"
      - name: Deploy API Gateway
        id: deploy-gateway
        uses: yc-actions/yc-api-gateway-deploy@v3.0.0
        with:
          yc-sa-id: ${{ env.SA_ID }}
          folder-id: ${{ env.FOLDER_ID }}
          gateway-name: ${{ env.YC_API_GATEWAY_NAME }}
          spec-file: apigw-openapi.resolved.yaml
      - name: Prepare static client assets
        if: env.STATIC_BUCKET != ''
        env:
          API_DOMAIN: ${{ steps.deploy-gateway.outputs.domain }}
        run: |
          set -euo pipefail
          workdir="dist/static"
          rm -rf "$workdir"
          mkdir -p "$workdir"
          cp -R server/public/. "$workdir/"
          api_base=""
          if [[ -n "${API_DOMAIN}" ]]; then
            api_base="https://${API_DOMAIN}"
          fi
          export WORKDIR="$workdir"
          export API_BASE="$api_base"
          node -e "const fs=require('fs');const path=require('path');const workdir=process.env.WORKDIR;const apiBase=(process.env.API_BASE || '').trim();if(!workdir){process.exit(0);}const indexPath=path.join(workdir,'index.html');let html=fs.readFileSync(indexPath,'utf8');html=html.replace(/%%API_BASE%%/g,apiBase);fs.writeFileSync(indexPath,html);"
      - name: Upload static client to Object Storage
        if: env.STATIC_BUCKET != ''
        uses: yc-actions/yc-obj-storage-upload@v3.0.0
        with:
          yc-sa-id: ${{ env.SA_ID }}
          bucket: ${{ env.STATIC_BUCKET }}
          root: dist/static
          cache-control: |
            *.html: no-cache, no-store, must-revalidate
            *.js, *.css: public, max-age=31536000, immutable
